
import React, { useState } from 'react';
import { StandardLayout } from '@/components/layout/StandardLayout';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Textarea } from '@/components/ui/textarea';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Search, Shield, AlertTriangle, CheckCircle, Upload, FileText } from 'lucide-react';

const VulnerabilityScanner = () => {
  const [scanType, setScanType] = useState('contract');
  const [contractAddress, setContractAddress] = useState('');
  const [contractCode, setContractCode] = useState('');
  const [isScanning, setIsScanning] = useState(false);
  const [scanResults, setScanResults] = useState(null);

  const handleScan = () => {
    setIsScanning(true);
    // Simulate scanning process
    setTimeout(() => {
      setIsScanning(false);
      setScanResults({
        critical: 2,
        high: 3,
        medium: 5,
        low: 8,
        total: 18
      });
    }, 3000);
  };

  return (
    <StandardLayout
      title="Vulnerability Scanner"
      description="AI-powered Web3 vulnerability scanner - March 2025"
    >
      <div className="container py-12">
        <div className="text-center mb-12">
          <Badge variant="secondary" className="mb-4">AI-Powered Scanner</Badge>
          <h1 className="text-4xl md:text-5xl font-bold mb-6">
            Vulnerability Scanner
          </h1>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            Scan your smart contracts and Web3 applications for security vulnerabilities 
            using our advanced AI-powered detection system.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Scanner Interface */}
          <div className="lg:col-span-2">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Search className="h-5 w-5" />
                  Security Scanner
                </CardTitle>
                <CardDescription>
                  Upload your contract code or enter a contract address to scan for vulnerabilities
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* Scan Type Selection */}
                <div className="flex gap-2">
                  <Button 
                    variant={scanType === 'contract' ? 'default' : 'outline'}
                    onClick={() => setScanType('contract')}
                  >
                    <FileText className="mr-2 h-4 w-4" />
                    Contract Code
                  </Button>
                  <Button 
                    variant={scanType === 'address' ? 'default' : 'outline'}
                    onClick={() => setScanType('address')}
                  >
                    <Shield className="mr-2 h-4 w-4" />
                    Contract Address
                  </Button>
                </div>

                {/* Input Fields */}
                {scanType === 'address' ? (
                  <div>
                    <label className="text-sm font-medium mb-2 block">Contract Address</label>
                    <Input
                      placeholder="0x..."
                      value={contractAddress}
                      onChange={(e) => setContractAddress(e.target.value)}
                    />
                  </div>
                ) : (
                  <div>
                    <label className="text-sm font-medium mb-2 block">Contract Code</label>
                    <Textarea
                      placeholder="Paste your Solidity code here..."
                      value={contractCode}
                      onChange={(e) => setContractCode(e.target.value)}
                      rows={10}
                    />
                    <div className="flex items-center gap-2 mt-2">
                      <Upload className="h-4 w-4" />
                      <span className="text-sm text-muted-foreground">Or upload a .sol file</span>
                    </div>
                  </div>
                )}

                {/* Scan Button */}
                <Button 
                  onClick={handleScan} 
                  disabled={isScanning || (!contractAddress && !contractCode)}
                  className="w-full"
                  size="lg"
                >
                  {isScanning ? (
                    <>Scanning... Please wait</>
                  ) : (
                    <>
                      <Search className="mr-2 h-4 w-4" />
                      Start Security Scan
                    </>
                  )}
                </Button>

                {/* Scan Results */}
                {scanResults && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-semibold">Scan Results</h3>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                      <Card className="border-red-200">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl font-bold text-red-500">{scanResults.critical}</div>
                          <div className="text-sm text-muted-foreground">Critical</div>
                        </CardContent>
                      </Card>
                      <Card className="border-orange-200">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl font-bold text-orange-500">{scanResults.high}</div>
                          <div className="text-sm text-muted-foreground">High</div>
                        </CardContent>
                      </Card>
                      <Card className="border-yellow-200">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl font-bold text-yellow-500">{scanResults.medium}</div>
                          <div className="text-sm text-muted-foreground">Medium</div>
                        </CardContent>
                      </Card>
                      <Card className="border-blue-200">
                        <CardContent className="p-4 text-center">
                          <div className="text-2xl font-bold text-blue-500">{scanResults.low}</div>
                          <div className="text-sm text-muted-foreground">Low</div>
                        </CardContent>
                      </Card>
                    </div>
                    
                    <Alert>
                      <AlertTriangle className="h-4 w-4" />
                      <AlertDescription>
                        Found {scanResults.total} potential security issues. 
                        <Button variant="link" className="p-0 ml-1">Download detailed report</Button>
                      </AlertDescription>
                    </Alert>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Scanner Info */}
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Scan Coverage</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {[
                  "Reentrancy vulnerabilities",
                  "Access control issues",
                  "Integer overflow/underflow",
                  "Gas optimization issues",
                  "Logic errors",
                  "External call safety"
                ].map((item, index) => (
                  <div key={index} className="flex items-center gap-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span className="text-sm">{item}</span>
                  </div>
                ))}
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Supported Chains</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2">
                {["Ethereum", "Binance Smart Chain", "Polygon", "Arbitrum", "Optimism"].map((chain, index) => (
                  <Badge key={index} variant="outline">{chain}</Badge>
                ))}
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </StandardLayout>
  );
};

export default VulnerabilityScanner;
