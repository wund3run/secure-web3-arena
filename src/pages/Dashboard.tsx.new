import React, { useState } from 'react';
import { Helmet } from 'react-helmet-async';
import { 
  Settings, 
  BarChart3, 
  Shield, 
  MessageSquare, 
  Bell, 
  Users, 
  Activity,
  FileText,
  Clock, 
  TrendingUp, 
  CheckCircle,
  User,
  Menu,
  X,
  ChevronRight,
  AlertTriangle
} from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { useAuth } from '@/contexts/auth';
import { ConnectionTest } from '@/components/debug/ConnectionTest';
import { HawklyCard, SecurityBadge, ProgressIndicator, LiveMetric } from '@/components/ui/hawkly-components';
import { EnhancedRouteGuard } from '@/components/routing/EnhancedRouteGuard';
import { ProjectOwnerDashboard } from '@/components/dashboard/enhanced/ProjectOwnerDashboard';
import { EnhancedAuditorDashboard } from '@/components/dashboard/enhanced/EnhancedAuditorDashboard';
import { AdminDashboard } from '@/components/admin/AdminDashboard';
import { AuditProgressTracker } from '@/components/dashboard/enhanced/AuditProgressTracker';
import { RealtimeChatSystem } from '@/components/chat/RealtimeChatSystem';
import { EnhancedNotificationCenter } from '@/components/notifications/EnhancedNotificationCenter';
import { Link } from 'react-router-dom';

const Dashboard = () => {
  const { user, getUserType, loading } = useAuth();
  const [showDebug, setShowDebug] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(true);
  
  const userType = user ? getUserType() : 'guest';

  // Generate greeting based on time of day
  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return 'Good morning';
    if (hour < 18) return 'Good afternoon';
    return 'Good evening';
  };

  const renderDashboardContent = () => {
    switch (userType) {
      case 'project_owner':
        return <ProjectOwnerDashboard />;
      case 'auditor':
        return <EnhancedAuditorDashboard />;
      case 'admin':
        return <AdminDashboard />;
      default:
        return <ProjectOwnerDashboard />;
    }
  };

  // Custom sidebar navigation items
  const sidebarItems = [
    { icon: BarChart3, label: 'Dashboard', href: '/dashboard', active: true },
    { icon: Shield, label: 'Security Hub', href: '/security-hub', active: false },
    { icon: FileText, label: 'Audit Reports', href: '/audits', active: false },
    { icon: MessageSquare, label: 'Messages', href: '/messages', active: false },
    { icon: Users, label: 'Team', href: '/team', active: false },
    { icon: Settings, label: 'Settings', href: '/settings', active: false }
  ];

  // Quick actions based on user type
  const quickActions = userType === 'project_owner' 
    ? [
        { label: 'Request Audit', href: '/request-audit', icon: Shield },
        { label: 'Find Auditors', href: '/marketplace', icon: Users },
        { label: 'View Reports', href: '/audits', icon: FileText },
      ]
    : [
        { label: 'Browse Projects', href: '/marketplace', icon: FileText },
        { label: 'Update Availability', href: '/profile', icon: Clock },
        { label: 'View Earnings', href: '/earnings', icon: Activity },
      ];

  return (
    <>
      <Helmet>
        <title>Dashboard | Hawkly</title>
        <meta name="description" content="Your comprehensive security management dashboard with real-time tracking and advanced features" />
      </Helmet>
      
      <div className="min-h-screen bg-[#0a0d16] flex">
        {/* Sidebar */}
        <div 
          className={`${
            sidebarOpen ? 'w-64' : 'w-20'
          } bg-[#1e2332] border-r border-[#23283e] transition-all duration-300 hidden md:block`}
        >
          <div className="p-4 flex justify-between items-center">
            <div className={`flex items-center ${!sidebarOpen && 'justify-center w-full'}`}>
              <div className="w-8 h-8 rounded-full bg-gradient-to-br from-[#a879ef] to-[#32d9fa] flex items-center justify-center text-white font-bold">
                H
              </div>
              {sidebarOpen && (
                <span className="ml-3 font-bold text-white">HAWKLY</span>
              )}
            </div>
            <button 
              onClick={() => setSidebarOpen(!sidebarOpen)} 
              className="p-1 rounded-md hover:bg-[#272e43] text-[#8391ad]"
            >
              {sidebarOpen ? <X size={18} /> : <Menu size={18} />}
            </button>
          </div>
          
          <div className="mt-6">
            {sidebarItems.map((item, index) => (
              <Link
                key={index}
                to={item.href}
                className={`
                  flex items-center px-4 py-3 text-[#8391ad] hover:bg-[#272e43] hover:text-white
                  ${item.active ? 'bg-[#272e43] text-white border-l-2 border-[#a879ef]' : ''}
                `}
              >
                <item.icon size={20} className={`${!sidebarOpen ? 'mx-auto' : 'mr-3'}`} />
                {sidebarOpen && <span>{item.label}</span>}
              </Link>
            ))}
          </div>

          {sidebarOpen && (
            <div className="absolute bottom-4 left-4 right-4">
              <HawklyCard variant="glass" className="p-3">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-[#272e43] flex items-center justify-center text-[#a879ef]">
                    <User size={18} />
                  </div>
                  <div className="ml-3">
                    <p className="text-sm font-medium text-white">
                      {user?.email?.split('@')[0] || 'User'}
                    </p>
                    <p className="text-xs text-[#8391ad]">
                      {userType.replace('_', ' ')}
                    </p>
                  </div>
                </div>
              </HawklyCard>
            </div>
          )}
        </div>
        
        {/* Mobile sidebar toggle button */}
        <div className="md:hidden fixed bottom-4 left-4 z-50">
          <button
            onClick={() => setSidebarOpen(!sidebarOpen)}
            className="p-3 rounded-full bg-[#a879ef] text-white shadow-lg shadow-[#a879ef]/20"
          >
            {sidebarOpen ? <X size={20} /> : <Menu size={20} />}
          </button>
        </div>
        
        {/* Mobile sidebar (only visible when open) */}
        {sidebarOpen && (
          <div className="md:hidden fixed inset-0 z-40 bg-[#0a0d16]/80 backdrop-blur-sm">
            <div className="w-64 h-full bg-[#1e2332] border-r border-[#23283e]">
              <div className="p-4 flex justify-between items-center">
                <div className="flex items-center">
                  <div className="w-8 h-8 rounded-full bg-gradient-to-br from-[#a879ef] to-[#32d9fa] flex items-center justify-center text-white font-bold">
                    H
                  </div>
                  <span className="ml-3 font-bold text-white">HAWKLY</span>
                </div>
                <button 
                  onClick={() => setSidebarOpen(false)} 
                  className="p-1 rounded-md hover:bg-[#272e43] text-[#8391ad]"
                >
                  <X size={18} />
                </button>
              </div>
              
              <div className="mt-6">
                {sidebarItems.map((item, index) => (
                  <Link
                    key={index}
                    to={item.href}
                    className={`
                      flex items-center px-4 py-3 text-[#8391ad] hover:bg-[#272e43] hover:text-white
                      ${item.active ? 'bg-[#272e43] text-white border-l-2 border-[#a879ef]' : ''}
                    `}
                    onClick={() => setSidebarOpen(false)}
                  >
                    <item.icon size={20} className="mr-3" />
                    <span>{item.label}</span>
                  </Link>
                ))}
              </div>
            </div>
          </div>
        )}
        
        {/* Main content */}
        <div className="flex-1 overflow-auto">
          <main className="container mx-auto px-4 py-8">
            <div className="flex items-center justify-between mb-8">
              <div className="space-y-1">
                <h1 className="text-3xl font-bold text-white">Dashboard</h1>
                <p className="text-[#8391ad]">{getGreeting()}, {user?.email?.split('@')[0] || 'User'}</p>
              </div>
              
              <div className="flex items-center space-x-2">
                {user && (
                  <Button 
                    variant="outline" 
                    size="sm"
                    onClick={() => setShowDebug(!showDebug)}
                    className="border-[#23283e] text-[#8391ad] hover:bg-[#272e43] hover:text-white"
                  >
                    <Settings className="h-4 w-4 mr-2" />
                    {showDebug ? 'Hide' : 'Show'} Debug
                  </Button>
                )}
                
                <div className="bg-[#1e2332] border border-[#23283e] rounded-md px-3 py-1.5 flex items-center space-x-2">
                  <SecurityBadge 
                    level={userType === 'admin' ? 'enterprise' : userType === 'auditor' ? 'advanced' : 'basic'} 
                    verified={true} 
                    size="sm" 
                  />
                </div>
              </div>
            </div>
            
            {showDebug && (
              <div className="mb-8">
                <HawklyCard variant="glass" elevation="subtle">
                  <div className="p-4">
                    <h3 className="text-md font-medium text-white mb-4">Connection Debug</h3>
                    <ConnectionTest />
                  </div>
                </HawklyCard>
              </div>
            )}
            
            <EnhancedRouteGuard 
              requiresAuth={true}
              allowedRoles={['auditor', 'project_owner', 'admin']}
              fallbackMessage="Please sign in to access your personalized dashboard"
            >
              <div className="space-y-8">
                {/* Quick Actions */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {quickActions.map((action, i) => (
                    <HawklyCard 
                      key={i}
                      variant="glass" 
                      elevation="subtle" 
                      interactive={true}
                      className="transition-all duration-300"
                    >
                      <Link to={action.href} className="p-4 flex items-center space-x-4">
                        <div className="rounded-full w-10 h-10 flex items-center justify-center bg-gradient-to-br from-[#a879ef]/20 to-[#32d9fa]/20">
                          <action.icon className="h-5 w-5 text-[#a879ef]" />
                        </div>
                        <div>
                          <h3 className="text-white font-medium">{action.label}</h3>
                          <p className="text-sm text-[#8391ad]">Quick access</p>
                        </div>
                        <ChevronRight className="ml-auto text-[#8391ad]" size={18} />
                      </Link>
                    </HawklyCard>
                  ))}
                </div>
                
                {/* Dashboard Tabs */}
                <Tabs defaultValue="overview" className="w-full">
                  <TabsList className="grid w-full grid-cols-4 bg-[#1e2332] border border-[#23283e] rounded-xl overflow-hidden">
                    <TabsTrigger 
                      value="overview" 
                      className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-3"
                    >
                      <BarChart3 className="h-4 w-4 mr-2" />
                      Overview
                    </TabsTrigger>
                    <TabsTrigger 
                      value="progress"
                      className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-3"
                    >
                      <Shield className="h-4 w-4 mr-2" />
                      Audit Progress
                    </TabsTrigger>
                    <TabsTrigger 
                      value="chat"
                      className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-3"
                    >
                      <MessageSquare className="h-4 w-4 mr-2" />
                      Chat
                    </TabsTrigger>
                    <TabsTrigger 
                      value="notifications"
                      className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-3"
                    >
                      <Bell className="h-4 w-4 mr-2" />
                      Notifications
                    </TabsTrigger>
                  </TabsList>

                  <TabsContent value="overview" className="mt-6">
                    {/* Stats Overview */}
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
                      <HawklyCard variant="glass" elevation="subtle">
                        <div className="p-4">
                          <div className="flex items-start justify-between">
                            <div>
                              <p className="text-[#8391ad] text-sm">Active Projects</p>
                              <p className="text-2xl font-bold text-white mt-1">3</p>
                            </div>
                            <div className="rounded-full p-2 bg-[#272e43]">
                              <Activity size={20} className="text-[#32d9fa]" />
                            </div>
                          </div>
                          <div className="mt-4">
                            <ProgressIndicator value={3} max={12} />
                          </div>
                        </div>
                      </HawklyCard>

                      <HawklyCard variant="glass" elevation="subtle">
                        <div className="p-4">
                          <div className="flex items-start justify-between">
                            <div>
                              <p className="text-[#8391ad] text-sm">Completed</p>
                              <p className="text-2xl font-bold text-white mt-1">9</p>
                            </div>
                            <div className="rounded-full p-2 bg-[#272e43]">
                              <CheckCircle size={20} className="text-[#2de08e]" />
                            </div>
                          </div>
                          <div className="mt-4">
                            <ProgressIndicator 
                              value={9} 
                              max={12}
                              glowEffect={true}
                            />
                          </div>
                        </div>
                      </HawklyCard>

                      <HawklyCard variant="glass" elevation="subtle">
                        <div className="p-4">
                          <div className="flex items-start justify-between">
                            <div>
                              <p className="text-[#8391ad] text-sm">Security Score</p>
                              <p className="text-2xl font-bold text-white mt-1">87/100</p>
                            </div>
                            <div className="rounded-full p-2 bg-[#272e43]">
                              <Shield size={20} className="text-[#a879ef]" />
                            </div>
                          </div>
                          <div className="mt-4">
                            <ProgressIndicator 
                              value={87} 
                              max={100}
                              glowEffect={true}
                            />
                          </div>
                        </div>
                      </HawklyCard>

                      <HawklyCard variant="glass" elevation="subtle">
                        <div className="p-4">
                          <div className="flex items-start justify-between">
                            <div>
                              <p className="text-[#8391ad] text-sm">Total Projects</p>
                              <p className="text-2xl font-bold text-white mt-1">12</p>
                            </div>
                            <div className="rounded-full p-2 bg-[#272e43]">
                              <TrendingUp size={20} className="text-[#32d9fa]" />
                            </div>
                          </div>
                          <div className="mt-4 pt-2">
                            <LiveMetric
                              label="Growth"
                              value="+25%"
                              trend="up"
                            />
                          </div>
                        </div>
                      </HawklyCard>
                    </div>

                    {/* Main Dashboard Content */}
                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                      <div className="lg:col-span-2">
                        <HawklyCard variant="glass" elevation="subtle">
                          <div className="p-6">
                            {renderDashboardContent()}
                          </div>
                        </HawklyCard>
                      </div>

                      <div className="space-y-6">
                        <HawklyCard variant="highlighted" elevation="subtle" glow={true}>
                          <div className="p-6">
                            <h3 className="text-lg font-medium text-white mb-4">Recent Activity</h3>
                            <div className="space-y-4">
                              {[
                                {
                                  title: 'Audit Report Received',
                                  description: 'DeFi Protocol audit completed',
                                  timestamp: '2 hours ago'
                                },
                                {
                                  title: 'New Proposal',
                                  description: 'Proposal submitted for NFT project',
                                  timestamp: '5 hours ago'
                                },
                                {
                                  title: 'Milestone Completed',
                                  description: 'Smart contract review finished',
                                  timestamp: '1 day ago'
                                }
                              ].map((activity, i) => (
                                <div key={i} className="flex items-start space-x-3 border-b border-[#23283e] pb-3 last:border-0 last:pb-0">
                                  <div className="rounded-full p-1 bg-[#272e43] mt-1">
                                    <Activity size={14} className="text-[#a879ef]" />
                                  </div>
                                  <div>
                                    <p className="text-sm font-medium text-white">{activity.title}</p>
                                    <p className="text-xs text-[#8391ad]">{activity.description}</p>
                                    <p className="text-xs text-[#8391ad] mt-1">{activity.timestamp}</p>
                                  </div>
                                </div>
                              ))}
                            </div>
                          </div>
                        </HawklyCard>

                        <HawklyCard variant="glass" elevation="subtle">
                          <div className="p-6">
                            <h3 className="text-lg font-medium text-white mb-4">Security Alerts</h3>
                            <div className="space-y-3">
                              <div className="p-3 bg-[#272e43]/50 rounded-lg border border-[#23283e]">
                                <div className="flex items-start space-x-3">
                                  <div className="text-[#fc3574] mt-1">
                                    <AlertTriangle size={16} />
                                  </div>
                                  <div>
                                    <p className="text-sm font-medium text-white">Critical vulnerability found</p>
                                    <p className="text-xs text-[#8391ad]">In TokenSwap contract</p>
                                  </div>
                                </div>
                                <Button className="w-full mt-2 bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none h-8 text-sm">
                                  View Details
                                </Button>
                              </div>
                              
                              <div className="p-3 bg-[#272e43]/50 rounded-lg border border-[#23283e]">
                                <div className="flex items-start space-x-3">
                                  <div className="text-[#ffd553] mt-1">
                                    <AlertTriangle size={16} />
                                  </div>
                                  <div>
                                    <p className="text-sm font-medium text-white">Medium severity issue</p>
                                    <p className="text-xs text-[#8391ad]">In NFT contract</p>
                                  </div>
                                </div>
                                <Button variant="outline" className="w-full mt-2 border-[#23283e] text-[#8391ad] hover:bg-[#272e43] hover:text-white h-8 text-sm">
                                  View Details
                                </Button>
                              </div>
                            </div>
                          </div>
                        </HawklyCard>
                      </div>
                    </div>
                  </TabsContent>

                  <TabsContent value="progress" className="mt-6">
                    <HawklyCard variant="glass" elevation="subtle">
                      <div className="p-6">
                        <h3 className="text-xl font-medium text-white mb-4">Audit Progress Tracking</h3>
                        <AuditProgressTracker />
                      </div>
                    </HawklyCard>
                  </TabsContent>

                  <TabsContent value="chat" className="mt-6">
                    <HawklyCard variant="glass" elevation="subtle">
                      <div className="p-6">
                        <h3 className="text-xl font-medium text-white mb-4">Real-time Communication</h3>
                        <RealtimeChatSystem />
                      </div>
                    </HawklyCard>
                  </TabsContent>

                  <TabsContent value="notifications" className="mt-6">
                    <HawklyCard variant="glass" elevation="subtle">
                      <div className="p-6">
                        <h3 className="text-xl font-medium text-white mb-4">Notification Center</h3>
                        <EnhancedNotificationCenter />
                      </div>
                    </HawklyCard>
                  </TabsContent>
                </Tabs>
              </div>
            </EnhancedRouteGuard>
          </main>
        </div>
      </div>
    </>
  );
};

export default Dashboard;
