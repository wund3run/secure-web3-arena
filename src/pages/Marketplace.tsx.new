import React, { useState } from 'react';
import { Helmet } from 'react-helmet-async';
import {
  Search,
  Filter,
  Plus,
  Shield,
  Users,
  TrendingUp,
  Star,
  Clock,
  DollarSign,
  ArrowUpRight,
  SlidersHorizontal,
  ChevronDown,
  BarChart3,
  X,
  Zap,
  Heart,
  Eye
} from 'lucide-react';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Link } from 'react-router-dom';
import { useAuth } from '@/contexts/auth';
import { MarketplaceProvider } from '@/contexts/marketplace/MarketplaceContext';
import { MarketplaceErrorBoundary } from '@/components/marketplace/error-handling/MarketplaceErrorBoundary';
import { SERVICES } from '@/data/marketplace-data';
import { HawklyCard, SecurityBadge, ProgressIndicator, LiveMetric } from '@/components/ui/hawkly-components';
import { Avatar } from '@/components/ui/avatar';

const MarketplacePage = () => {
  const { user, getUserType } = useAuth();
  const [activeFilters, setActiveFilters] = useState<string[]>([]);
  const [showFilters, setShowFilters] = useState(false);
  const userType = user ? getUserType() : 'guest';
  
  const marketplaceStats = [
    { label: 'Active Projects', value: '127', icon: Shield, color: 'text-[#32d9fa]' },
    { label: 'Verified Auditors', value: '89', icon: Users, color: 'text-[#2de08e]' },
    { label: 'Successful Matches', value: '256', icon: TrendingUp, color: 'text-[#a879ef]' }
  ];
  
  // Filter categories
  const filterCategories = [
    {
      name: 'Project Type',
      filters: ['Smart Contract', 'Protocol', 'DApp', 'NFT', 'DeFi', 'DAO', 'Exchange']
    },
    {
      name: 'Blockchain',
      filters: ['Ethereum', 'Solana', 'Polygon', 'BSC', 'Avalanche', 'Optimism', 'Arbitrum']
    },
    {
      name: 'Budget Range',
      filters: ['Under $5k', '$5k-$10k', '$10k-$25k', '$25k-$50k', 'Over $50k']
    },
    {
      name: 'Timeline',
      filters: ['Urgent (24h)', 'Express (3 days)', 'Standard (7 days)', 'Extended (14+ days)']
    }
  ];
  
  // Sample auditor data
  const topAuditors = [
    {
      name: 'Alex Chen',
      handle: '@cryptoShield',
      avatar: 'https://i.pravatar.cc/150?u=alex',
      rating: 4.9,
      reviews: 32,
      specialties: ['Smart Contracts', 'DeFi'],
      verified: true
    },
    {
      name: 'Sophia Wu',
      handle: '@defiAuditor',
      avatar: 'https://i.pravatar.cc/150?u=sophia',
      rating: 4.8,
      reviews: 28,
      specialties: ['NFT', 'Gaming'],
      verified: true
    },
    {
      name: 'Miguel Diaz',
      handle: '@securityFirst',
      avatar: 'https://i.pravatar.cc/150?u=miguel',
      rating: 4.7,
      reviews: 41,
      specialties: ['Protocol', 'DAO'],
      verified: true
    }
  ];
  
  // Sample project data
  const featuredProjects = [
    {
      id: 'proj-1',
      name: 'DeFi Lending Protocol',
      description: 'Comprehensive audit needed for our new lending protocol with innovative yield strategies',
      blockchain: 'Ethereum',
      budget: '$15k-$25k',
      deadline: '14 days',
      urgency: 'Standard',
      client: {
        name: 'DeFi Innovations',
        avatar: 'https://i.pravatar.cc/150?u=defi'
      },
      tags: ['DeFi', 'Lending', 'Ethereum']
    },
    {
      id: 'proj-2',
      name: 'NFT Marketplace Smart Contracts',
      description: 'Security review for NFT marketplace with royalty enforcement and multi-chain support',
      blockchain: 'Polygon',
      budget: '$10k-$15k',
      deadline: '7 days',
      urgency: 'Standard',
      client: {
        name: 'NFT Global',
        avatar: 'https://i.pravatar.cc/150?u=nft'
      },
      tags: ['NFT', 'Marketplace', 'Polygon']
    },
    {
      id: 'proj-3',
      name: 'DAO Governance System',
      description: 'Audit required for governance contracts with delegation and proposal mechanisms',
      blockchain: 'Solana',
      budget: '$20k-$30k',
      deadline: '21 days',
      urgency: 'Extended',
      client: {
        name: 'Governance DAO',
        avatar: 'https://i.pravatar.cc/150?u=dao'
      },
      tags: ['DAO', 'Governance', 'Solana']
    }
  ];
  
  const toggleFilter = (filter: string) => {
    setActiveFilters(prev => 
      prev.includes(filter) 
        ? prev.filter(f => f !== filter) 
        : [...prev, filter]
    );
  };
  
  return (
    <>
      <Helmet>
        <title>Security Marketplace | Hawkly</title>
        <meta name="description" content="Find security auditors and audit projects in the Web3 marketplace" />
      </Helmet>
      
      <MarketplaceProvider services={SERVICES}>
        <MarketplaceErrorBoundary>
          <div className="min-h-screen bg-[#0a0d16]">
            <main>
              {/* Hero Banner */}
              <div className="bg-gradient-to-br from-[#1a1f35] to-[#252042] pt-12 pb-16 px-4 md:px-6">
                <div className="container mx-auto">
                  <div className="text-center space-y-4">
                    <div className="inline-block mb-4">
                      <Badge 
                        className="px-4 py-2 bg-[#a879ef]/10 border border-[#a879ef]/30 text-[#a879ef] text-sm font-medium rounded-full"
                      >
                        <Shield className="h-4 w-4 mr-2" />
                        Web3 Security Marketplace
                      </Badge>
                    </div>
                    <h1 className="text-4xl md:text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-white to-[#a879ef]/90">
                      Find Your Perfect Security Match
                    </h1>
                    <p className="text-lg md:text-xl text-[#8391ad] max-w-3xl mx-auto">
                      Connect with verified auditors or discover your next security project with our AI-powered matching system
                    </p>
                    
                    {/* Search Bar */}
                    <div className="max-w-2xl mx-auto mt-8">
                      <div className="relative">
                        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-[#8391ad]" />
                        <Input 
                          placeholder="Search for projects, auditors, or keywords..."
                          className="pl-10 h-12 border border-[#23283e] bg-[#1e2332]/50 backdrop-blur-sm text-white focus:border-[#a879ef] rounded-xl"
                        />
                        <Button 
                          className="absolute right-1 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none h-10"
                        >
                          Search
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              {/* Stats Section */}
              <div className="container mx-auto px-4 md:px-6 -mt-10">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {marketplaceStats.map((stat, idx) => (
                    <HawklyCard 
                      key={idx}
                      variant="glass" 
                      elevation="subtle" 
                      className="border border-[#23283e]"
                    >
                      <div className="p-6 text-center">
                        <div className="flex items-center justify-center space-x-3">
                          <div className="rounded-full p-2 bg-[#272e43]">
                            <stat.icon className={`h-5 w-5 ${stat.color}`} />
                          </div>
                          <span className="text-3xl font-bold text-white">{stat.value}</span>
                        </div>
                        <p className="text-sm text-[#8391ad] mt-2">{stat.label}</p>
                      </div>
                    </HawklyCard>
                  ))}
                </div>
              </div>
              
              {/* Call to Action Buttons */}
              <div className="container mx-auto px-4 md:px-6 mt-8 mb-10">
                <div className="flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-4">
                  {user ? (
                    <>
                      <Link to="/submit-project">
                        <Button 
                          className="w-full sm:w-auto bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none h-12 px-8"
                        >
                          <Plus className="h-5 w-5 mr-2" />
                          Submit Project
                        </Button>
                      </Link>
                      <Link to="/auditor/signup">
                        <Button 
                          variant="outline" 
                          className="w-full sm:w-auto border-[#a879ef]/30 text-[#a879ef] hover:bg-[#a879ef]/10 h-12 px-8"
                        >
                          <Shield className="h-5 w-5 mr-2" />
                          Become an Auditor
                        </Button>
                      </Link>
                    </>
                  ) : (
                    <Link to="/auth">
                      <Button 
                        className="w-full sm:w-auto bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none h-12 px-8"
                      >
                        Get Started
                      </Button>
                    </Link>
                  )}
                </div>
              </div>
              
              {/* Main Content */}
              <div className="container mx-auto px-4 md:px-6 pb-16">
                {/* Tabs Navigation */}
                <Tabs defaultValue="projects" className="w-full">
                  <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
                    <TabsList className="bg-[#1e2332] border border-[#23283e] rounded-xl overflow-hidden">
                      <TabsTrigger 
                        value="projects" 
                        className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-2 px-4"
                      >
                        <BarChart3 className="h-4 w-4 mr-2" />
                        Projects
                      </TabsTrigger>
                      <TabsTrigger 
                        value="auditors" 
                        className="data-[state=active]:bg-[#272e43] data-[state=active]:text-white text-[#8391ad] py-2 px-4"
                      >
                        <Users className="h-4 w-4 mr-2" />
                        Auditors
                      </TabsTrigger>
                    </TabsList>
                    
                    <div className="flex items-center space-x-3">
                      <Button
                        variant="outline"
                        className="border-[#23283e] text-[#8391ad] hover:bg-[#272e43] hover:text-white"
                        onClick={() => setShowFilters(!showFilters)}
                      >
                        <SlidersHorizontal className="h-4 w-4 mr-2" />
                        Filters
                        <Badge className="ml-2 bg-[#a879ef]/20 text-[#a879ef] hover:bg-[#a879ef]/20">
                          {activeFilters.length || 0}
                        </Badge>
                      </Button>
                      
                      <Button
                        variant="outline"
                        className="border-[#23283e] text-[#8391ad] hover:bg-[#272e43] hover:text-white"
                      >
                        Sort
                        <ChevronDown className="h-4 w-4 ml-1" />
                      </Button>
                    </div>
                  </div>
                  
                  {/* Filters Panel */}
                  {showFilters && (
                    <HawklyCard 
                      variant="glass" 
                      elevation="subtle" 
                      className="mb-6 border border-[#23283e]"
                    >
                      <div className="p-6">
                        <div className="flex justify-between items-center mb-4">
                          <h3 className="text-lg font-medium text-white">Filters</h3>
                          <div className="flex items-center space-x-3">
                            <Button 
                              variant="outline" 
                              size="sm"
                              className="text-[#8391ad] border-[#23283e] hover:bg-[#272e43] hover:text-white"
                              onClick={() => setActiveFilters([])}
                            >
                              Clear All
                            </Button>
                            <Button 
                              size="sm"
                              onClick={() => setShowFilters(false)}
                              variant="ghost"
                              className="text-[#8391ad] hover:bg-[#272e43] hover:text-white p-1"
                            >
                              <X size={18} />
                            </Button>
                          </div>
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                          {filterCategories.map((category) => (
                            <div key={category.name}>
                              <h4 className="text-sm font-medium text-white mb-3">{category.name}</h4>
                              <div className="space-y-2">
                                {category.filters.map((filter) => (
                                  <div key={filter} className="flex items-center">
                                    <input 
                                      type="checkbox" 
                                      id={filter}
                                      className="rounded border-[#23283e] bg-[#1e2332] text-[#a879ef] focus:ring-[#a879ef] mr-2"
                                      checked={activeFilters.includes(filter)}
                                      onChange={() => toggleFilter(filter)}
                                    />
                                    <label htmlFor={filter} className="text-sm text-[#8391ad]">
                                      {filter}
                                    </label>
                                  </div>
                                ))}
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    </HawklyCard>
                  )}
                  
                  {/* Active Filters */}
                  {activeFilters.length > 0 && (
                    <div className="flex flex-wrap gap-2 mb-6">
                      {activeFilters.map((filter) => (
                        <Badge 
                          key={filter}
                          className="bg-[#272e43] text-white hover:bg-[#272e43] px-3 py-1"
                        >
                          {filter}
                          <button 
                            className="ml-2 text-[#8391ad] hover:text-white"
                            onClick={() => toggleFilter(filter)}
                          >
                            <X size={14} />
                          </button>
                        </Badge>
                      ))}
                      
                      <Button 
                        variant="ghost" 
                        size="sm" 
                        className="text-[#8391ad] hover:text-white hover:bg-transparent p-0 h-auto"
                        onClick={() => setActiveFilters([])}
                      >
                        Clear all
                      </Button>
                    </div>
                  )}
                  
                  {/* Tabs Content */}
                  <TabsContent value="projects">
                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                      <div className="lg:col-span-2">
                        <div className="space-y-6">
                          {featuredProjects.map((project) => (
                            <HawklyCard 
                              key={project.id}
                              variant="glass" 
                              elevation="subtle"
                              interactive={true}
                              className="border border-[#23283e] transition-all duration-200"
                            >
                              <Link to={`/projects/${project.id}`} className="block p-6">
                                <div className="flex justify-between items-start">
                                  <div>
                                    <h3 className="text-xl font-medium text-white mb-2">{project.name}</h3>
                                    <p className="text-sm text-[#8391ad] mb-4">{project.description}</p>
                                    
                                    <div className="flex flex-wrap gap-2 mb-4">
                                      {project.tags.map((tag) => (
                                        <Badge 
                                          key={tag} 
                                          className="bg-[#272e43] text-[#a879ef] hover:bg-[#272e43]"
                                        >
                                          {tag}
                                        </Badge>
                                      ))}
                                    </div>
                                    
                                    <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
                                      <div className="flex items-center">
                                        <DollarSign className="h-4 w-4 text-[#32d9fa] mr-2" />
                                        <span className="text-sm text-[#8391ad]">{project.budget}</span>
                                      </div>
                                      <div className="flex items-center">
                                        <Clock className="h-4 w-4 text-[#ffd553] mr-2" />
                                        <span className="text-sm text-[#8391ad]">{project.deadline}</span>
                                      </div>
                                      <div className="flex items-center">
                                        <Shield className="h-4 w-4 text-[#a879ef] mr-2" />
                                        <span className="text-sm text-[#8391ad]">{project.blockchain}</span>
                                      </div>
                                      <div className="flex items-center">
                                        <Zap className="h-4 w-4 text-[#fc3574] mr-2" />
                                        <span className="text-sm text-[#8391ad]">{project.urgency}</span>
                                      </div>
                                    </div>
                                  </div>
                                  
                                  <div className="flex flex-col items-center">
                                    <Avatar className="h-12 w-12 border-2 border-[#23283e]">
                                      <img src={project.client.avatar} alt={project.client.name} className="h-full w-full object-cover" />
                                    </Avatar>
                                    <span className="text-xs text-[#8391ad] mt-2">{project.client.name}</span>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center mt-6 border-t border-[#23283e] pt-4">
                                  <div className="flex items-center">
                                    <Button 
                                      variant="ghost" 
                                      size="sm" 
                                      className="text-[#8391ad] hover:text-[#a879ef] hover:bg-transparent p-1"
                                    >
                                      <Heart className="h-5 w-5" />
                                    </Button>
                                    <Button 
                                      variant="ghost" 
                                      size="sm" 
                                      className="text-[#8391ad] hover:text-[#a879ef] hover:bg-transparent p-1"
                                    >
                                      <Eye className="h-5 w-5" />
                                    </Button>
                                  </div>
                                  <Button 
                                    className="bg-[#a879ef]/10 hover:bg-[#a879ef]/20 text-[#a879ef] border-none"
                                  >
                                    Apply Now
                                    <ArrowUpRight className="h-4 w-4 ml-1" />
                                  </Button>
                                </div>
                              </Link>
                            </HawklyCard>
                          ))}
                        </div>
                      </div>
                      
                      {/* Sidebar */}
                      <div className="space-y-6">
                        {/* Top Auditors */}
                        <HawklyCard 
                          variant="glass" 
                          elevation="subtle"
                          className="border border-[#23283e]"
                        >
                          <div className="p-6">
                            <h3 className="text-lg font-medium text-white mb-4">Top Rated Auditors</h3>
                            <div className="space-y-4">
                              {topAuditors.map((auditor, index) => (
                                <div 
                                  key={index} 
                                  className={`flex items-center gap-3 ${
                                    index < topAuditors.length - 1 ? 'pb-4 border-b border-[#23283e]' : ''
                                  }`}
                                >
                                  <Avatar className="h-10 w-10 border border-[#23283e]">
                                    <img src={auditor.avatar} alt={auditor.name} className="h-full w-full object-cover" />
                                  </Avatar>
                                  <div className="flex-1 min-w-0">
                                    <div className="flex items-center justify-between">
                                      <p className="text-sm font-medium text-white truncate">{auditor.name}</p>
                                      <div className="flex items-center">
                                        <Star className="h-3 w-3 text-[#ffd553] fill-[#ffd553]" />
                                        <span className="text-xs text-[#8391ad] ml-1">{auditor.rating}</span>
                                      </div>
                                    </div>
                                    <p className="text-xs text-[#8391ad]">{auditor.handle}</p>
                                    <div className="flex flex-wrap gap-1 mt-1">
                                      {auditor.specialties.map((specialty) => (
                                        <Badge 
                                          key={specialty} 
                                          variant="outline" 
                                          className="text-[#8391ad] border-[#23283e] text-xs py-0 px-1"
                                        >
                                          {specialty}
                                        </Badge>
                                      ))}
                                    </div>
                                  </div>
                                </div>
                              ))}
                            </div>
                            <Button 
                              variant="outline" 
                              className="w-full mt-4 border-[#23283e] text-[#8391ad] hover:bg-[#272e43] hover:text-white"
                            >
                              View All Auditors
                            </Button>
                          </div>
                        </HawklyCard>
                        
                        {/* Audit Request CTAs */}
                        <HawklyCard 
                          variant="highlighted" 
                          elevation="subtle"
                          glow={true}
                          className="border border-[#a879ef]/20"
                        >
                          <div className="p-6">
                            <h3 className="text-lg font-medium text-white mb-2">Need a Security Audit?</h3>
                            <p className="text-sm text-[#8391ad] mb-4">
                              Submit your project and get matched with the perfect auditor for your needs
                            </p>
                            <Button 
                              className="w-full bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none"
                            >
                              <Plus className="h-4 w-4 mr-2" />
                              Create Audit Request
                            </Button>
                          </div>
                        </HawklyCard>
                      </div>
                    </div>
                  </TabsContent>
                  
                  <TabsContent value="auditors">
                    <div className="text-center py-12">
                      <h3 className="text-2xl font-medium text-white mb-2">Auditor Directory</h3>
                      <p className="text-[#8391ad] mb-4">
                        Full auditor listings coming soon
                      </p>
                      <Button className="bg-gradient-to-r from-[#a879ef] to-[#32d9fa] hover:from-[#9a6adf] hover:to-[#25c9ea] border-none">
                        Sign Up for Early Access
                      </Button>
                    </div>
                  </TabsContent>
                </Tabs>
              </div>
            </main>
          </div>
        </MarketplaceErrorBoundary>
      </MarketplaceProvider>
    </>
  );
};

export default MarketplacePage;
